// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block       = require("bs-platform/lib/js/block.js");
var Curry       = require("bs-platform/lib/js/curry.js");
var Printf      = require("bs-platform/lib/js/printf.js");
var Js_json     = require("bs-platform/lib/js/js_json.js");
var JsYaml      = require("js-yaml");
var Json_decode = require("bs-json/src/Json_decode.js");

var value = Curry._2(JsYaml.safeLoad, "test: 123", /* () */0);

var match = Js_json.decodeObject(value);

var a = match ? Object.keys(match[0]) : /* array */[];

console.log(a);

console.log(JSON.stringify(value));

function point(json) {
  return /* float array */[
          Json_decode.field("x", Json_decode.$$float, json),
          Json_decode.field("y", Json_decode.$$float, json)
        ];
}

function line(json) {
  return /* record */[
          /* start */Json_decode.field("start", point, json),
          /* end_ */Json_decode.field("end", point, json),
          /* thickness */Json_decode.optional((function (param) {
                  return Json_decode.field("thickness", Json_decode.$$int, param);
                }), json)
        ];
}

var Decode = /* module */[
  /* point */point,
  /* line */line
];

var data = " {\n  \"start\": { \"x\": 1.1, \"y\": -0.4 },\n  \"end\":   { \"x\": 5.3, \"y\": 3.8 }\n} ";

var line$1 = line(JSON.parse(data));

Curry._1(Printf.printf(/* Format */[
          /* Float */Block.__(8, [
              /* Float_f */0,
              /* No_padding */0,
              /* No_precision */0,
              /* Char_literal */Block.__(12, [
                  /* "\n" */10,
                  /* End_of_format */0
                ])
            ]),
          "%f\n"
        ]), line$1[/* start */0][/* x */0]);

exports.value  = value;
exports.a      = a;
exports.Decode = Decode;
exports.data   = data;
exports.line   = line$1;
/* value Not a pure module */
